<?php
bolt_decrypt( __FILE__ , 'LaAHkJ'); return 0;
##!!!##