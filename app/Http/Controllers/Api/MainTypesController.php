<?php
bolt_decrypt( __FILE__ , 'EDybQK'); return 0;
##!!!##DQoNCm5hbWVzcGFjZSBBcHBcSHR0cFxDb250cm9sbGVyc1xBcGk7DQoNCnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xDb250cm9sbGVyOw0KdXNlIEFwcFxNb2RlbHNcTWl4aW5zTWFpblR5cGVzOw0KdXNlIEFwcFxUcmFpdHNcSW1hZ2VzVHJhaXQ7DQp1c2UgSWxsdW1pbmF0ZVxIdHRwXFJlcXVlc3Q7DQp1c2UgREI7DQoNCmNsYXNzIE1haW5UeXBlc0NvbnRyb2xsZXIgZXh0ZW5kcyBDb250cm9sbGVyDQp7DQogICAgLyoqDQogICAgICogRGlzcGxheSBhIGxpc3Rpbmcgb2YgdGhlIHJlc291cmNlLg0KICAgICAqDQogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlDQogICAgICovDQogICAgdXNlIEltYWdlc1RyYWl0Ow0KDQogICAgcHVibGljIGZ1bmN0aW9uIGluZGV4KCkNCiAgICB7DQogICAgICAgIGlmIChhdXRoKCktPnVzZXIoKS0+YnJhbmNoLT5zYW1lX3R5cGUpIHsNCiAgICAgICAgICAgICRtYWluVHlwZXMgPSBNaXhpbnNNYWluVHlwZXM6OndpdGgoDQogICAgICAgICAgICAgICAgWydwcm9kdWN0cycgPT4gZnVuY3Rpb24gKCRxKSB7DQogICAgICAgICAgICAgICAgICAgICRxLT53aGVyZSgnaXNfZGVsZXRlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICB9XQ0KICAgICAgICAgICAgKS0+Z2V0KCk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkbWFpblR5cGVzID0gTWl4aW5zTWFpblR5cGVzOjp3aGVyZSgnYnJhbmNoX2lkJywgJz0nLCBhdXRoKCktPnVzZXIoKS0+YnJhbmNoX2lkKS0+d2l0aCgNCiAgICAgICAgICAgICAgICBbDQogICAgICAgICAgICAgICAgICAgICdwcm9kdWN0cycgPT4gZnVuY3Rpb24gKCRxKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkcS0+d2hlcmUoJ2lzX2RlbGV0ZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICApLT5nZXQoKTsNCiAgICAgICAgfQ0KDQoNCiAgICAgICAgcmV0dXJuICBqc29uX2VuY29kZSgkbWFpblR5cGVzKTsNCiAgICB9DQogICAgcHVibGljIGZ1bmN0aW9uIHByaW50ZXJzKCkNCiAgICB7DQoNCiAgICAgICAgcmV0dXJuICBqc29uX2VuY29kZShzaGVsbF9leGVjKCd3bWljIHByaW50ZXIgZ2V0IG5hbWUnKSk7DQogICAgfQ0KICAgIHB1YmxpYyBmdW5jdGlvbiBzZXREZWZhdWx0cHJpbnRlcigkbmFtZSkNCiAgICB7DQoNCiAgICAgICAgc2hlbGxfZXhlYygid21pYyBwcmludGVyIHdoZXJlIG5hbWU9JyIgLiAkbmFtZSAuICInIGNhbGwgc2V0ZGVmYXVsdHByaW50ZXIiKTsNCg0KICAgICAgICAvLyBzaGVsbF9leGVjKCdydW5kbGwzMiBwcmludHVpLmRsbCxQcmludFVJRW50cnkgL3kgL24gJyIuJG5hbWUuIik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogU3RvcmUgYSBuZXdseSBjcmVhdGVkIHJlc291cmNlIGluIHN0b3JhZ2UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gIFxJbGx1bWluYXRlXEh0dHBcUmVxdWVzdCAgJHJlcXVlc3QNCiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gc3RvcmUoUmVxdWVzdCAkcmVxdWVzdCkNCiAgICB7DQogICAgICAgICRkYXRhID0gYXJyYXkoKTsNCiAgICAgICAgaWYgKCRyZXF1ZXN0LT50eXBlX2ljb24pIHsNCiAgICAgICAgICAgICRpbWFnZV91cmwgPSAkdGhpcy0+VXBsb2FkSW1hZ2UoJHJlcXVlc3QtPnR5cGVfaWNvbiwgJ2JhY2tlbmQvcHJvZHVjdHMvJyk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkaW1hZ2VfdXJsID0gJ2JhY2tlbmQvcHJvZHVjdHMvcHJvZHVjdC5wbmcnOw0KICAgICAgICB9DQogICAgICAgICRkYXRhWyd0eXBlX2ljb24nXSA9ICRpbWFnZV91cmw7DQoNCiAgICAgICAgJGRhdGFbIm1haW5fdHlwZV90aXRsZV9hciJdID0gJHJlcXVlc3QtPm1haW5fdHlwZV90aXRsZV9hcjsNCiAgICAgICAgJGRhdGFbIm1haW5fdHlwZV90aXRsZV9lbiJdID0gJHJlcXVlc3QtPm1haW5fdHlwZV90aXRsZV9lbjsNCiAgICAgICAgJGRhdGFbInByaW50ZXJfbmFtZSJdID0gJHJlcXVlc3QtPnByaW50ZXJfbmFtZTsNCg0KICAgICAgICAkZGF0YVsnYnJhbmNoX2lkJ10gPSBhdXRoKCktPnVzZXIoKS0+YnJhbmNoX2lkOw0KDQogICAgICAgIE1peGluc01haW5UeXBlczo6aW5zZXJ0KCRkYXRhKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBEaXNwbGF5IHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gIGludCAgJGlkDQogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIHNob3coJGlkKQ0KICAgIHsNCiAgICAgICAgJG1haW5UeXBlcyA9IERCOjp0YWJsZSgnbWl4aW5zX21haW5fdHlwZXMnKS0+d2hlcmUoJ21haW5fdHlwZV9pZCcsICRpZCktPmZpcnN0KCk7DQogICAgICAgIGlmICghJG1haW5UeXBlcykNCiAgICAgICAgICAgICRtYWluVHlwZXMgPSBEQjo6dGFibGUoJ21peGluc19tYWluX3R5cGVzJyktPndoZXJlKCdtYWluX3R5cGVfaWQnLCAkaWQpLT5maXJzdCgpOw0KICAgICAgICBpZiAoISRtYWluVHlwZXMpDQogICAgICAgICAgICAkbWFpblR5cGVzID0gREI6OnRhYmxlKCdtaXhpbnNfbWFpbl90eXBlcycpLT53aGVyZSgnbWFpbl90eXBlX2lkJywgJGlkKS0+Zmlyc3QoKTsNCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oJG1haW5UeXBlcyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogU2hvdyB0aGUgZm9ybSBmb3IgZWRpdGluZyB0aGUgc3BlY2lmaWVkIHJlc291cmNlLg0KICAgICAqDQogICAgICogQHBhcmFtICBpbnQgICRpZA0KICAgICAqIEByZXR1cm4gXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBlZGl0KCRpZCkNCiAgICB7DQogICAgfQ0KDQogICAgLyoqDQogICAgICogVXBkYXRlIHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UgaW4gc3RvcmFnZS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAgXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0ICAkcmVxdWVzdA0KICAgICAqIEBwYXJhbSAgaW50ICAkaWQNCiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gdXBkYXRlKFJlcXVlc3QgJHJlcXVlc3QsICRpZCkNCiAgICB7DQoNCiAgICAgICAgJGRhdGEgPSBhcnJheSgpOw0KICAgICAgICBpZiAoJHJlcXVlc3QtPm5ld3Bob3RvKSB7DQogICAgICAgICAgICAkaW1hZ2VfdXJsID0gJHRoaXMtPlVwbG9hZEltYWdlKCRyZXF1ZXN0LT5uZXdwaG90bywgJ2JhY2tlbmQvcHJvZHVjdHMvJyk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkaW1hZ2VfdXJsID0gJ2JhY2tlbmQvcHJvZHVjdHMvcHJvZHVjdC5wbmcnOw0KICAgICAgICB9DQoNCiAgICAgICAgJGRhdGFbJ3R5cGVfaWNvbiddID0gJGltYWdlX3VybDsNCiAgICAgICAgJGRhdGFbIm1haW5fdHlwZV90aXRsZV9hciJdID0gJHJlcXVlc3QtPm1haW5fdHlwZV90aXRsZV9hcjsNCiAgICAgICAgJGRhdGFbIm1haW5fdHlwZV90aXRsZV9lbiJdID0gJHJlcXVlc3QtPm1haW5fdHlwZV90aXRsZV9lbjsNCiAgICAgICAgJGRhdGFbInByaW50ZXJfbmFtZSJdID0gJHJlcXVlc3QtPnByaW50ZXJfbmFtZTsNCiAgICAgICAgTWl4aW5zTWFpblR5cGVzOjp3aGVyZSgnbWFpbl90eXBlX2lkJywgJGlkKS0+dXBkYXRlKCRkYXRhKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBSZW1vdmUgdGhlIHNwZWNpZmllZCByZXNvdXJjZSBmcm9tIHN0b3JhZ2UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gIGludCAgJGlkDQogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGRlc3Ryb3koJGlkKQ0KICAgIHsNCiAgICAgICAgREI6OnRhYmxlKCdtaXhpbnNfbWFpbl90eXBlcycpLT53aGVyZSgnbWFpbl90eXBlX2lkJywgJGlkKS0+Zmlyc3QoKTsNCg0KICAgIH0NCn0NCg==